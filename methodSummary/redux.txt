1.redux是什么？
    redux是一个独立专门用于做状态管理的JS库（不是react插件库）
    和react适配度高，所以多用于react项目中，别的也能用（如Android、vue等）
2.作用：
    集中管理react中多个组件共享的状态
3.redux的流程
    react部分：ReactComponent
    redux部分：ActionCreator => Store => Reducers
自述流程：
    a)读状态：（1）ReactComponent从Store中读取state
    b)修改状态：
    （2）ReactComponent和ActionCreator ：
        ReactComponent中可以写dispatch（action）
    （3）ActionCreator和Store ：
        通过dispatch（action），分发事件，通知store更新状态
        action两个属性：
            type：事件名（固定的）
            data：数据（如删除时需要传的下标）
    （4）Store和Reducer:
        Reducers接受（oldState，action），oldState是（之前的状态），action是一个对象{type:'',data:data}
        Reducers给Store返回一个newState（新的状态）
    c)人为操作的状态，（3）和（4）
4.什么时候需要用redux？
    某个组件的状态需要共享
    某个状态需要在任何地方拿到
    一个组件需要改变全局的状态
    一个组件需要改变另一个组件的状态（切换logo就是这么实现的）
5.常用函数
父组件
    import {createStore} from 'redux'
    import { counter } from '@/redux/reducers.js'
    import App from '@/components/redux/app.jsx'
        //生成一个store对象,()内是reducer中function的名字
        let store = createStore(counter)
        //将store对象传给子组件
        <App store={store}/>
子组件
    //获取reducer中state的值
    let a = this.props.store.getState()
    //调用reducer更改store中的state，{}内是一个action对象。type对应的是要做的事情的名字，可以通过action.type取值；num是传给reducer的数据，可以通过action.data取值
    this.props.store.dispatch({type:'INCREMENT',data:num})
reducers
    //每个文件默认只能由export default function
    export function counter(state = 0,action){
        switch(action.type){
            case:'INCREMENT':
                return state + action.data
            case:'DECREMENT':
                return state - action.data
            default：
                return state
        }
    }
最后父组件
    当store中的数据发生变化就会调用subscribe
    最后在父组件中使用store.subscribe(()=>{
        this.setState({value:store.getState()})
    })
    单纯是为了更改父组件的state让页面重新render

6.redux进一步划分模块
    store.js createStore创建store对象
    reducers.js 改变store的函数，可以接受action={type:'',data:data}，通过return更改数据
    action.js   存放action对象，export const increment = (num)=>({type:''，data:num})
    reducers-type.js 存放type的名字，将字符串赋给一个变量